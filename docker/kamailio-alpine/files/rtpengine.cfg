
/* inside route {} */
route[RTPOFFER] {
#!ifdef WITH_NAT
	if (!has_body("application/sdp")) return ;

	# - Web to Web (offer)
	if (isflagset(FLT_SRC_WS) && isbflagset(FLB_WS_DEVICE)) {
		$var(reflags) = "tag web-to-web          trust-address replace-origin replace-session-connection SDES-off ICE=force";
	}
	# - Web to SIP (offer)
	else if (isflagset(FLT_SRC_WS)) {
		$var(reflags) = "tag web-to-sip          trust-address replace-origin replace-session-connection rtcp-mux-demux ICE=remove RTP/AVP";
	}
	# - SIP to Web (offer)
	else if (isbflagset(FLB_WS_DEVICE)) {
		$var(reflags) = "tag sip-to-web          trust-address replace-origin replace-session-connection rtcp-mux-offer ICE=force transcode-PCMU transcode-G722 SDES-off UDP/TLS/RTP/SAVP";
	}
	# - MSTEAMS to SIP (offer)
	else if (isbflagset(FLB_SRC_MSTEAMS)) {
		$var(reflags) = "tag teams-to-sip        trust-address replace-origin replace-session-connection rtcp-mux-offer ICE=remove RTP/AVP";
	}
	# - MSTEAMS to SIP [ONHOLD] (offer)
	else if (isbflagset(FLB_SRC_MSTEAMS_ONHOLD)) {
		$var(reflags) = "tag teams-to-sip-onhold web-to-web trust-address replace-origin replace-session-connection rtcp-mux-accept ICE=remove RTP/AVP";
	}
	# - SIP to MSTEAMS (offer)
	else if (isbflagset(FLB_DST_MSTEAMS)) {
		$var(reflags) = "tag sip-to-teams        trust-address replace-origin replace-session-connection rtcp-mux-offer ICE=force transcode-PCMU transcode-G722 RTP/SAVP";
	}
	# - SIP to SIP (offer)
	else {
		$var(reflags) = "tag sip-to-sip          trust-address replace-origin replace-session-connection rtcp-mux-demux ICE=remove RTP/AVP";
	}`

    xlog("L_INFO", "RTP [$rm] - OFFER  : $var(reflags)");
	rtpengine_offer("$var(reflags)");
#!endif
	return ;
}

/* inside reply_route {} */
route [RTPANSWER] {
#!ifdef WITH_NAT
	if (!has_body("application/sdp")) return ;
	
	# - Web to Web (answer)
	if (isflagset(FLT_SRC_WS) && isbflagset(FLB_WS_DEVICE)) {
		$var(reflags) = "tag web-to-web trust-address replace-origin replace-session-connection SDES-off ICE=force";
	}
	# - Web to SIP (answer) - decrypt
	else if (isflagset(FLT_SRC_WS)) {
		$var(reflags) = "tag web-to-sip trust-address replace-origin replace-session-connection rtcp-mux-require ICE=force RTP/SAVPF";
	}
	#
	# - MSTEAMS to SIP (answer) -decrypt
	else if (isbflagset(FLB_SRC_MSTEAMS)) {
		$var(reflags) = "tag sip-to-teams trust-address replace-origin replace-session-connection rtcp-mux-require ICE=force transcode-PCMU transcode-G722 SDES-off RTP/SAVP";
		
		#$var(reflags) = "trust-address replace-origin replace-session-connection rtcp-mux-offer ICE=force SDES-off RTP/SAVP";
	}
	# - SIP to MSTEAMS (answer) -decrypt
	else if (isbflagset(FLB_DST_MSTEAMS)) {
		$var(reflags) = "tag teams-to-sip trust-address replace-origin replace-session-connection rtcp-mux-offer ICE=remove RTP/AVP";
	} 
	# - SIP to MSTEAMS ONHOLD (answer) - decrypt
	else if (isbflagset(FLB_SRC_MSTEAMS_ONHOLD)) {
		$var(reflags) = "tag sip-to-team-onhold trust-address replace-origin replace-session-connection ICE=remove  transcode-PCMU transcode-G722 SDES-off RTP/SAVP";
		#$var(reflags) = "trust-address replace-origin replace-session-connection rtcp-mux-offer ICE=force SDES-off RTP/SAVP";
	}
	# - SIP to SIP (answer)
	else {
		$var(reflags) = "tag sip-to-sip trust-address replace-origin replace-session-connection rtcp-mux-demux ICE=remove RTP/AVP";
	}

    xlog("L_INFO", "RTP [$rm] - ANSWER : $var(reflags)");
	rtpengine_answer("$var(reflags)");
#!endif
	return ;
}

