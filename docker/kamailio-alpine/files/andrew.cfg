
# ------------------ andrew stuff ------------------------------------

### listener examples
### listen=udp:192.168.11.4 advertise 20.190.118.9:5060
### listen=tls:192.168.11.4:5061 advertise 20.190.118.9:5061

## Obscure
user_agent_header="User-Agent: Kamailio"
server_header="Server: Kamailio"
sip_warning=0

# Maximum call duration: 3 hours
####!define MAX_DIALOG_TIMEOUT 10800
###modparam("dialog", "default_timeout", MAX_DIALOG_TIMEOUT)

/* life time of TCP connection when there is no traffic
 * - a bit higher than registration expires to cope with UA behind NAT */
tcp_connection_lifetime=3605

# set this to above zero to drain calls - it is check inside route(FIRST)
# reset to zero, to resume normal operations
system.shutdownmode=0 desc "System shutdown mode"

/* Andrew's Global Variables */

# these need to be enabled or disabled together
#######!define WITH_TLS
#######!define WITH_WEBSOCKETS
#######!define WITH_SBC
#######!define WITH_3CX
#######!define WITH_MICROSOFT_TEAMS
#######!define WITH_UAC
#######!define WITH_TRUNK
#######!define WITH_EXEC

# optional
#######!define WITH_ANTIFLOOD
#######!define WITH_PRESENCE
#######!define WITH_ENUM

######### always needed
#!define WITH_SQLITE
#!define WITH_AUTH

#########!define WITH_USRLOCDB
#!define WITH_SPEEDDIAL
#!define WITH_SDPOPS
#!define WITH_HOMER_SECURITY_CHECKS
#!define WITH_GEOIP

#RPC
#!define WITH_JSONRPC

# troubleshooting
#!define WITH_DEBUGGER
#!define WITH_EXEC

### #!define WITH_PSTN
### pstn.gw_ip = "127.0.0.1"
### pstn.gw_port = 5060

#####!define WITH_NAT
# option for NAT SIP OPTIONS keepalives: WITH_NATSIPPING
#     - install RTPProxy: http://www.rtpproxy.org
#     - start RTPProxy:
#        rtpproxy -l _your_public_ip_ -s udp:localhost:7722
# OR
# To use RTPEngine (instead of RTPProxy) for nat traversal execute:
#     - define WITH_RTPENGINE
#     - install RTPEngine: https://github.com/sipwise/rtpengine
#     - start RTPEngine:
#        rtpengine --listen-ng=127.0.0.1:2223 ...

#!ifdef WITH_3CX
#!substdef "!3CX1_EXTENSION!3X!g"
#!substdef "!3CX1_HOST!mail.lordsomerscamp.org.au!g"
#!substdef "!3CX1_PROTO!udp!g"
#!substdef "!3CX1_PORT!5070!g"

#!substdef "!3CX2_EXTENSION!2X!g"
#!substdef "!3CX2_HOST!camp.lordsomerscamp.org.au!g"
#!substdef "!3CX2_PROTO!udp!g"
#!substdef "!3CX2_PORT!5070!g"
#!endif

#!ifdef WITH_TRUNK
#!ifndef WITH_UAC
#!define WITH_UAC
#!endif
#!substdef "!TRUNK_HOST!trunk.com!g"
#!substdef "!TRUNK_PROTO!udp!g"
#!substdef "!TRUNK_PORT!5060!g"
#!substdef "!TRUNK_USER!user!g"
#!substdef "!TRUNK_PASSWORD!password!g"
#!endif 

#!ifdef WITH_SBC
#!substdef "!PRIVATE_IP!192.168.11.4!g"
#!substdef "!EXTERNAL_NAME!sbc.lordsomerscamp.org.au!g"
#!substdef "!EXTERNAL_IP!20.190.118.9!g"
#!substdef "!SIP_PORT!5060!g"
#!substdef "!SIPS_PORT!5061!g"
#!ifdef WITH_WEBSOCKETS
#!substdef "!WS_PORT!8080!g"
#!substdef "!WSS_PORT!8443!g"
#!endif 
/* not sure */
#!substdef "!MSRP_PORT!9000!g"
#!substdef "!RPC_PORT!8001!g"
/* not sure */
#!ifdef WITH_DMQ
#!substdef "!DMQ_PORT!5090!g"
#!substdef "!DMQ_SERVER!0.0.0.0!g"
#!substdef "!DMQ_NOTIFY!dmq.nickvsnetworking.com!g"
#!endif 
listen=udp:PRIVATE_IP:SIP_PORT advertise EXTERNAL_IP:SIP_PORT
listen=tcp:PRIVATE_IP:SIP_PORT advertise EXTERNAL_IP:SIP_PORT
#!ifdef WITH_TLS
listen=tls:PRIVATE_IP:SIPS_PORT advertise EXTERNAL_IP:SIPS_PORT
#!endif
listen=sctp:PRIVATE_IP:SIP_PORT advertise EXTERNAL_IP:SIP_PORT
#!ifdef WITH_WEBSOCKETS
listen=tcp:PRIVATE_IP:WS_PORT advertise EXTERNAL_IP:WS_PORT
#!ifdef WITH_TLS
listen=tls:PRIVATE_IP:WSS_PORT advertise EXTERNAL_IP:WSS_PORT
#!endif 
#!endif
alias="EXTERNAL_NAME"
### format listen variable: listen=[proto]:[localip]:[lport] advertise [publicip]:[pport]
#!ifdef WITH_DMQ
listen=udp:PRIVATE_IP:DMQ_PORT advertise EXTERNAL_IP:DMQ_PORT
#!endif 
auto_aliases=no
#!endif 

#!ifdef WITH_SQLITE
loadmodule "db_sqlite"
#!define DBURL "sqlite:////etc/kamailio/db/sqlite"
#!endif 

#!ifdef WITH_SYSTEMDOPS
# needs libsystemd
loadmodule "systemdops"
#!endif 

#!ifdef WITH_DROUTING
loadmodule "drouting"
modparam("drouting", "db_url", DBURL)
#!endif

#!ifdef WITH_ENUM
# try the Internet for calls with phone numbers
loadmodule "enum"
#!endif

# Enable outbound edge proxy - hopefully we never need this
loadmodule "outbound"
loadmodule "stun"
loadmodule "sctp"

#!ifdef WITH_DEBUGGER
# needs TLS
loadmodule "debugger"
modparam("debugger", "cfgtrace", 1)
modparam("debugger", "breakpoint", 1)
# L_DBG        3 
debug=3
loadmodule "siptrace"
modparam("siptrace", "db_url", DBURL)
## kamcmd siptrace.status on
## kamcmd siptrace.status off
## kamcmd siptrace.status check
#!endif

#!ifdef WITH_SDPOPS
loadmodule "sdpops"
#!endif 

#!ifdef WITH_GEOIP
loadmodule "geoip2"
### License Key: tyrhLJpJiWmke42x
### wget "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=tyrhLJpJiWmke42x&suffix=tar.gz" --output-file=aw.tar.gz
modparam("geoip2", "path", "/etc/kamailio/db/GeoLite2-Country.mmdb")
#!endif

## MS Voice System detects if the SBC is working in two ways:
##
## MS periodically probes with SIP OPTIONS requests, and
## we need to he SBC probes periodically the MS infrastructure
## with SIP OPTIONS request
## So we need to setup Kamailio to support this.
## If you use the default kamailio.cfg then Kamailio should already 
## be replying to SIP OPTIONS with a status 200 "Keepalive" reply.
## So the first part is already solved.
## For the second part we will use the dispatcher module
#!ifdef WITH_MICROSOFT_SBC
######!ifndef WITH_TLS
######!define WITH_TLS
######!endif /* WITH_TLS */
loadmodule "dispatcher"
modparam("dispatcher", "list_file", "/etc/kamailio/dispatcher.list")
modparam("dispatcher", "ds_probing_mode", 1)
modparam("dispatcher", "ds_ping_interval", 60)
#!endif

### Notes
## rr			round route
## tm			persistent transaction
## sl_reply 	is stateless reply
## t_relay 		is transactional relay
## xlog 		syslog 
## config files: All lines that do things (instructions) have to end with a semicolon
## Comments start with # if single line or /* blah */ for multi-line
## Changes to the config only take effect when you restart Kamailio

## three types of kamilio proxies:-
## Stateless: doesnâ€™t remember anything about the messages (sessions), no state information is kept. As soon as the proxy forwards the message, it forgets all about it.
## Transaction Stateful:  keeps state until a final response is received, and then forgets the state information after the final response.
## Dialog Stateful: keeps state information for the duration of that session (dialog).

## User cases:-
## Stateless: Load balancer, Redirection server, Manipulate headers
## Transaction Stateful:  Call charging, CDR generation, User status (Knows if on call)
## Dialog Stateful: Dispatch to destinations until successful, Call forward on Busy / No Answer, SIP Registrar

#!ifdef WITH_EXEC
loadmodule "exec"
#!endif 

#!ifdef WITH_DMQ
loadmodule "dmq.so"
loadmodule "dmq_usrloc.so"
# ---- dmq params ----
modparam("dmq", "server_address", "sip:DMQ_SERVER:DMQ_PORT")
modparam("dmq", "notification_address", "sip:DMQ_NOTIFY:DMQ_PORT")
modparam("dmq", "multi_notify", 1)
modparam("dmq_usrloc", "enable", 
#!endif

