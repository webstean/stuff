
# ------------------ andrew stuff ------------------------------------

### listener examples
### listen=udp:192.168.11.4 advertise 20.190.118.9:5060
### listen=tls:192.168.11.4:5061 advertise 20.190.118.9:5061

# Maximum call duration: 3 hours
####!define MAX_DIALOG_TIMEOUT 10800
###modparam("dialog", "default_timeout", MAX_DIALOG_TIMEOUT)

# set this to above zero to drain calls - it is check inside route(FIRST)
# reset to zero, to resume normal operations
system.shutdownmode=0 desc "System shutdown mode"

/* Andrew's Define Code Blocks */

# these need to be enabled or disabled together

####### Define Code Blocks #########
#	define WITH_DEBUG
#!define WITH_ANTIFLOOD
#	define WITH_APIBAN
#	define WITH_SIPDEBUG


# Somers SBC - custom IP addresses
#######!define WITH_SBC

# Certificates
#######!define WITH_TLS

# WebScokets (future)
#######!define WITH_WEBSOCKETS

# 3CX Routing to Camp and Albert Park
#######!define WITH_PABX

# MS TEAMS connectivity
#######!define WITH_MICROSOFT_TEAMS

# Need for Trunk Authentication
#######!define WITH_UAC

# Need for configured Trunk
#######!define WITH_TRUNK

# Enable SCTP - not much support out there for this
#######!define WITH_SCTP

# Enable TCP - enable TCP needed to TLS
#!define WITH_TCP

#######!define WITH_EXEC

# optional
#######!define WITH_ANTIFLOOD
#######!define WITH_PRESENCE
#######!define WITH_ENUM

######### always needed
#!define WITH_SQLITE
# or
#####!define WITH_MYSQL
#!define WITH_AUTH

#!define WITH_DISPATCHER

#########!define WITH_USRLOCDB
#!define WITH_SPEEDDIAL
#!define WITH_SDPOPS
#!define WITH_HOMER_SECURITY_CHECKS
#!define WITH_GEOIP

# troubleshooting
#!define WITH_DEBUGGER
#!define WITH_EXEC

### #!define WITH_PSTN
### pstn.gw_ip = "127.0.0.1"
### pstn.gw_port = 5060

#####!define WITH_NAT
# option for NAT SIP OPTIONS keepalives: WITH_NATSIPPING
#     - install RTPProxy: http://www.rtpproxy.org
#     - start RTPProxy:
#        rtpproxy -l _your_public_ip_ -s udp:localhost:7722
# OR
# To use RTPEngine (instead of RTPProxy) for nat traversal execute:
#     - define WITH_RTPENGINE
#     - install RTPEngine: https://github.com/sipwise/rtpengine
#     - start RTPEngine:
#        rtpengine --listen-ng=127.0.0.1:2223 ...

### === NUMBER FORMATS ===
### 10 digit (US format) - cannot start with a zero or 1
### regexp: \b([2-9][0-9]{9})\b

###  10 digit (Australian format) - always starts with a zero
### regexp: \b([0][2-478][0-9]{8})\b   - AUS normal phone numbers
### regexp: \b([1][3][0][0][0-9]{6})\b - AUS 1300 plus six digits
### regexp: \b([1][8][0][0][0-9]{6})\b - AUS 1800 plus six digits
### regexp: \b([1][3][1][0-9]{3})\b    - AUS 131 plus three digits

### xlog("L_ERROR","rU before dialplan translation is $rU");
### dp_translate("2", "$rU/$rU");
### xlog("L_ERROR","rU after dialplan translation is $rU");

### with dialplan module
# dpid = Dialplan ID. This means we can have multiple dialplans, each with a unique dialplan ID. When testing we’ll always need to specific the dialplan ID we’re using to make sure we’re testing with the right rules.
# priority = dialplan allow us to have different weighted priorities. For example we might want a match all wildcard entry, but more specific entries with lower values. We don’t want to match our wildcard failover entry if there’s a more specific match, so we use priorities to run through the list, first we try and match the group with the lowest number, then the next lowest and so on, until a match is found.
# match_op = Match Operation. There are 3 options:
## 0 – string comparison;
## 1 – regular expression matching (pcre)  <-- use this
## 2 – fnmatch (shell-like pattern) matching
#
# In our first example we had match_op set to 0, so we exactly matched “StringA”. The real power comes from Regex Matching, which we’ll cover soon.
#
# match_exp = Match expression. When match_op is set to 0 this matches exactly the
#             string in match_exp, when match_op is set to 1 this will contain a
#             regular expression to match.
# match_len = Match Length. Allows you to match a specific length of string.
# subst_exp = Substitute Expression. If match_op is set to 0 this will contain be empty
#             If match_op is 1 this will contain the same as match_exp.
# repl_exp  = Replacement expression. If match_op is set to 0 this will contain the
#             string to replace the matched string.
# attrs     = Often used as a descriptive name for the matched rule.

# dpid=3, pr=1, match_op=1, match_exp=xxx,match_len=0, subst_exp=yyy, repl_exp-

#!ifdef WITH_PABX
# PABX1
#!substdef "!PABX1_HOST!albert.lordsomerscamp.org.au!g"
#!substdef "!PABX1_PROTO!udp!g"
#!substdef "!PABX1_PORT!5070!g"
#!substdef "!PABX1_NUMBER!\+61395107066!g"
#!substdef "!PABX1_EXTENSION!3X!g"
# PABX2
#!substdef "!PABX2_HOST!camp.lordsomerscamp.org.au!g"
#!substdef "!PABX2_PROTO!udp!g"
#!substdef "!PABX2_PORT!5070!g"
#!substdef "!PABX2_NUMBER!\+61359835502!g"
#!substdef "!PABX2_EXTENSION!2X!g"
#!endif


# ensure UAC for Trunk authentication
#!ifdef WITH_TRUNK
#!ifndef WITH_UAC
#!define WITH_UAC
#!endif
# enable specific Trunk here
#!define WITH_TRUNK_SIP_US
#!endif

# ensure TLS is enabled along with MS Teams
#!ifdef WITH_MICROSOFT_TEAMS
#!ifndef WITH_TLS
#!define WITH_TLS
#!endif
#!endif

# TRUNK: sip.us
#!ifdef WITH_TRUNK_SIP_US
#!substdef "!TRUNK_HOSTP!gw1.sip.us!g"
#!substdef "!TRUNK_HOSTS!gw2.sip.us!g"
#!substdef "!TRUNK_PROTO!udp!g"
#!substdef "!TRUNK_PORT!5060!g"
#!substdef "!TRUNK_USER!5296575339!g"
#!substdef "!TRUNK_PASSWORD!2qufev6npyf2cc2f!g"
#### SIP.US Test Number 404 997 2999 (10digits) +14049972999
#!endif 

# TRUNK: sip.us
#!ifdef WITH_TRUNK_VOIPCLOUD
#!substdef "!TRUNK_HOSTP!sipm1.au.voipcloud.online!g"
#!substdef "!TRUNK_HOSTS!sipm2.au.voipcloud.online!g"
#!substdef "!TRUNK_PROTO!udp!g"
#!substdef "!TRUNK_PORT!5060!g"
#!substdef "!TRUNK_USER!5296575339!g"
#!substdef "!TRUNK_PASSWORD!2qufev6npyf2cc2f!g"
#### SIP.US Test Number 404 997 2999 (10digits)
#!endif 

#!ifdef WITH_SBC
#!substdef "!PRIVATE_IP!192.168.11.4!g"
#!substdef "!EXTERNAL_NAME!sbc.lordsomerscamp.org.au!g"
#!substdef "!EXTERNAL_IP!20.190.118.9!g"
#!substdef "!SIP_PORT!5060!g"
#!substdef "!SIPS_PORT!5061!g"
#!ifdef WITH_WEBSOCKETS
#!substdef "!WS_PORT!8080!g"
#!substdef "!WSS_PORT!8443!g"
#!endif
listen=udp:PRIVATE_IP:SIP_PORT advertise EXTERNAL_IP:SIP_PORT
#!ifdef WITH_SCTP
listen=sctp:PRIVATE_IP:SIP_PORT advertise EXTERNAL_IP:SIP_PORT
#!endif
#!ifdef WITH_TCP
tcp_connection_lifetime=3605
listen=tcp:PRIVATE_IP:SIP_PORT advertise EXTERNAL_IP:SIP_PORT
#!endif 
#!ifdef WITH_TLS
enable_tls=yes
listen=tls:PRIVATE_IP:
SIPS_PORT advertise EXTERNAL_IP:SIPS_PORT
#!endif
#!ifdef WITH_WEBSOCKETS
listen=tcp:PRIVATE_IP:WS_PORT advertise EXTERNAL_IP:WS_PORT
#!ifdef WITH_TLS
listen=tls:PRIVATE_IP:WSS_PORT advertise EXTERNAL_IP:WSS_PORT
#!endif 
#!endif
alias="EXTERNAL_NAME"
### format listen variable: listen=[proto]:[localip]:[lport] advertise [publicip]:[pport]
auto_aliases=no
#!endif 

#!ifdef WITH_APIBAN
### https://apiban.org --- Community Sharing of Bad Actors
#!substdef "!APIBANKEY!2db31597134c5a5526534994cfbb522b!g"
#!endif

#!ifdef WITH_MYSQL
loadmodule "db_mysql"
#!trydef DBURL "mysql://kamailio:kamailiorw@localhost/kamailio"
#!endif

#!ifdef WITH_SQLITE
loadmodule "db_sqlite"
#!trydef DBURL "sqlite:////etc/kamailio/db/sqlite"
#!endif 

#!ifdef WITH_SYSTEMDOPS
# needs libsystemd
loadmodule "systemdops"
#!endif 

#!ifdef WITH_DROUTING
loadmodule "drouting"
modparam("drouting", "db_url", DBURL)
#!endif

#!ifdef WITH_ENUM
# try the Internet for calls with phone numbers
loadmodule "enum"
#!endif

# Enable outbound edge proxy - hopefully we never need this
###loadmodule "outbound"
###loadmodule "stun"

#!ifdef WITH_SCTP
loadmodule "sctp"
#!endif

#!ifdef WITH_SDPOPS
loadmodule "sdpops"
#!endif 

#!ifdef WITH_GEOIP
loadmodule "geoip2"
### License Key: tyrhLJpJiWmke42x
### wget "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=tyrhLJpJiWmke42x&suffix=tar.gz" --output-file=aw.tar.gz
modparam("geoip2", "path", "/etc/kamailio/db/GeoLite2-Country.mmdb")
#!endif

### Notes
## rr			round route
## tm			persistent transaction
## sl_reply 	is stateless reply
## t_relay 		is transactional relay
## xlog 		syslog 
## config files: All lines that do things (instructions) have to end with a semicolon
## Comments start with # if single line or /* blah */ for multi-line
## Changes to the config only take effect when you restart Kamailio

## three types of kamilio proxies:-
## Stateless: doesn’t remember anything about the messages (sessions), no state information is kept. As soon as the proxy forwards the message, it forgets all about it.
## Transaction Stateful:  keeps state until a final response is received, and then forgets the state information after the final response.
## Dialog Stateful: keeps state information for the duration of that session (dialog).

## User cases:-
## Stateless: Load balancer, Redirection server, Manipulate headers
## Transaction Stateful:  Call charging, CDR generation, User status (Knows if on call)
## Dialog Stateful: Dispatch to destinations until successful, Call forward on Busy / No Answer, SIP Registrar

#!ifdef WITH_EXEC
loadmodule "exec"
#!endif 

#!ifdef WITH_DMQ
/* parameters */
#!substdef "!DMQ_PORT!5090!g"
#!substdef "!DMQ_SERVER!0.0.0.0!g"
#!substdef "!DMQ_NOTIFY!dmq.nickvsnetworking.com!g"
loadmodule "dmq.so"
loadmodule "dmq_usrloc.so"
# ---- dmq params ----
modparam("dmq", "server_address", "sip:DMQ_SERVER:DMQ_PORT")
modparam("dmq", "notification_address", "sip:DMQ_NOTIFY:DMQ_PORT")
modparam("dmq", "multi_notify", 1)
modparam("dmq_usrloc", "enable", 
#!endif

# Various Settings
memdbg=5
memlog=5
pv_buffer_size=65536
pv_cache_limit=65536
log_facility=LOG_LOCAL0
log_prefix="{$mt $proto $hdr(CSeq) $ci} "
children=4
enable_tls=yes
tcp_connection_lifetime=3605
dns=no
dns_cache_init=off
dns_srv_lb=no
dns_try_naptr=no
maxbuffer=65536
max_while_loops=250
rev_dns=no
use_dns_cache=no
auto_aliases=no
mhomed=0

## Obscure
user_agent_header="User-Agent: Kamailio"
server_header="Server: Kamailio"
sip_warning=0

#!ifdef WITH_SIPDEBUG
onsend_route_reply=yes
#!endif

####### Modules Section ########
loadmodule "jsonrpcs.so"
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "outbound.so"
loadmodule "textops.so"
loadmodule "siputils.so"
loadmodule "xlog.so"
loadmodule "sanity.so"
loadmodule "ctl.so"
loadmodule "cfg_rpc.so"
loadmodule "rtimer.so"
loadmodule "json.so"
loadmodule "http_client.so"
loadmodule "jansson.so"
loadmodule "htable.so"
loadmodule "textopsx.so"
loadmodule "rtpengine.so"
loadmodule "tls.so"
loadmodule "nathelper.so"
loadmodule "path.so"

#!ifdef WITH_ANTIFLOOD
loadmodule "pike.so"
#!endif

#!ifdef WITH_DEBUG
loadmodule "debugger.so"
#!endif

/* set it to yes to enable sctp and load sctp.so module */
#!ifdef WITH_SCTP
enable_sctp=no
loadmodule "sctp"
#!endif

# ----------------- setting module-specific parameters ---------------
# ----- jsonrpcs params -----
modparam("jsonrpcs", "pretty_format", 1)

# ----- ctl params -----
modparam("ctl", "binrpc", "unix:/var/run/kamailio/kamailio_ctl")
modparam("ctl", "binrpc", "tcp:localhost:2046")

# ----- tm params -----
modparam("tm", "failure_reply_mode", 3)
modparam("tm", "noisy_ctimer", 1)
modparam("tm", "cancel_b_method", 1)

# ----- rr params -----
modparam("rr", "enable_full_lr", 1)
modparam("rr", "append_fromtag", 1)
modparam("rr", "ignore_sips", 1)
modparam("rr", "enable_double_rr", 2)

# ----- path -----
modparam("path", "enable_r2", 1)

# ----- rtimer params -----
#!ifdef WITH_APIBAN
modparam("rtimer", "timer", "name=apiban;interval=300;mode=1;")
modparam("rtimer", "exec", "timer=apiban;route=APIBAN")
modparam("htable", "htable", "apiban=>size=11;")
modparam("htable", "htable", "apibanctl=>size=1;initval=0;")
#!endif

#!ifdef WITH_TLS
# ----- tls params -----
## modparam("tls", "config", "/etc/kamailio/tls.cfg")
# ----- tls params -----
modparam("tls", "tls_method", "TLSv1.2+")
### Note: the certificate verification will always fail if the ca_list is empty.
modparam("tls", "verify_certificate", 1)
modparam("tls", "require_certificate", 1)
modparam("tls", "private_key", "/etc/letsencrypt/live/EXTERNAL_NAME/privkey.pem")
modparam("tls", "certificate", "/etc/letsencrypt/live/EXTERNAL_NAME/fullchain.pem")
modparam("tls", "ca_list", "/etc/kamailio/ca_list.pem")
## modparam("tls", "tls_disable_compression", 0) # enable
# Create CA list:
# for f in /etc/ssl/certs/*.pem ; do cat "$f" >> /etc/kamailio/ca_list.pem ; done
#!endif

# ----- rtpproxy params -----
modparam("rtpengine", "rtpengine_sock", "udp:127.0.0.1:7722")
modparam("rtpengine", "rtpengine_disable_tout", 15)
modparam("rtpengine", "rtpengine_tout_ms", 2000)
modparam("rtpengine", "rtpengine_retr", 2)

#!ifdef WITH_ANTIFLOOD
# ----- pike params -----
modparam("pike", "sampling_time_unit", 2)
modparam("pike", "reqs_density_per_unit", 16)
modparam("pike", "remove_latency", 4)

# ----- htable params -----
/* ip ban htable with autoexpire after 5 minutes */
modparam("htable", "htable", "ipban=>size=8;autoexpire=14400")
#!endif

#!ifdef WITH_DEBUG
# ----- debugger params -----
modparam("debugger", "cfgtrace", 1)
modparam("debugger", "log_level_name", "exec")
#!endif

# do not follow redirects
modparam("http_client", "httpredirect", 0)
modparam("http_client", "connection_timeout", 4)
modparam("http_client", "verify_peer", 0)
modparam("http_client", "verify_host", 0)
modparam("http_client", "keep_connections", 1)

