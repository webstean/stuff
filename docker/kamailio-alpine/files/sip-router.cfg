
# ------------------ andrew stuff ------------------------------------

### listener examples
### listen=udp:192.168.11.4 advertise 20.190.118.9:5060
### listen=tls:192.168.11.4:5061 advertise 20.190.118.9:5061

## Identification
### user_agent_header="User-Agent: TelcoSuite OCS"
### server_header="Server: TelcoSuite OCS"

#!ifdef WITH_3CX
pabx1.bindip = "1.2.3.4" desc "3CX IP Address"
pabx2.bindport = "5080" desc "FreeSWITCH Port"
pabx2.bindip = "1.2.3.4" desc "3CX IP Address"
pabx2.bindport = "5080" desc "FreeSWITCH Port"
#!endif

/* life time of TCP connection when there is no traffic
 * - a bit higher than registration expires to cope with UA behind NAT */
tcp_connection_lifetime=3605

#####!define WITH_TLS
#!define WITH_SQLITE
#!define WITH_AUTH
#!define WITH_IPAUTH
#!define WITH_USRLOCDB
#!define WITH_PRESENCE
#!define WITH_SPEEDDIAL
#!define WITH_MULTIDOMAIN
#!define WITH_ANTIFLOOD
#!define WITH_ENUM
#!define WITH_HOMER_SECURITY_CHECKS
#!define WITH_GEOIP

### #!define WITH_PSTN
### pstn.gw_ip = "127.0.0.1"
### pstn.gw_port = 5060

#####!define WITH_NAT
# option for NAT SIP OPTIONS keepalives: WITH_NATSIPPING
#     - install RTPProxy: http://www.rtpproxy.org
#     - start RTPProxy:
#        rtpproxy -l _your_public_ip_ -s udp:localhost:7722
# OR
# To use RTPEngine (instead of RTPProxy) for nat traversal execute:
#     - define WITH_RTPENGINE
#     - install RTPEngine: https://github.com/sipwise/rtpengine
#     - start RTPEngine:
#        rtpengine --listen-ng=127.0.0.1:2223 ...

#!ifdef WITH_SQLITE
loadmodule "db_sqlite"
#!define DBURL "sqlite:////etc/kamailio/db/sqlite"
#!endif

#!ifdef WITH_ENUM
# try the Internet for calls
loadmodule "enum"
#!endif

# Enable outbound edge proxy
loadmodule "outbound"
loadmodule "stun"
loadmodule "sctp"

#!ifdef WITH_TLS
modparam("tls", "config", "tls.cfg")
enable_tls=yes
/* upper limit for TLS connections */
tls_max_connections=512
#!endif

#!ifdef WITH_GEOIP
### GEO IP
loadmodule "geoip2"
### License Key: tyrhLJpJiWmke42x
### wget "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=tyrhLJpJiWmke42x&suffix=tar.gz" --output-file=aw.tar.gz
modparam("geoip2", "path", "/etc/kamailio/db/GeoLite2-Country.mmdb")
#!endif

######!define MICROSOFT_SBC
## MS Voice System detects if the SBC is working in two ways:
##
## MS periodically probes with SIP OPTIONS requests, and
## we need to he SBC probes periodically the MS infrastructurei
## with SIP OPTIONS request
## So we need to setup Kamailio to support this.
## If you use the default kamailio.cfg then Kamailio should already be replying to SIP OPTIONS with a status 200
## - "Keepalive" reply. So the first part is already solved.
## For the second part we will use the dispatcher module

#!ifdef WITH_MICROSOFT_SBC
loadmodule "dispatcher.so"
modparam("dispatcher", "list_file", "/etc/kamailio/dispatcher.list")
modparam("dispatcher", "ds_probing_mode", 1)
modparam("dispatcher", "ds_ping_interval", 60)

# stateful logic
event_route[tm:local-request] {
    if(is_method("OPTIONS") && $ru =~ "pstnhub.microsoft.com") {
        append_hf("Contact: <sip:sbc.lordsomerscamp.org.au:5061;transport=tls>\r\n");
    }
    xlog("L_INFO", "Sent out tm request (keepalive) for Microsoft: $mb\n");
}
#!endif

### Notes
## rr			round route
## tm			persistent transaction
## sl_reply 	is stateless reply
## t_relay 		is transactional relay
## xlog 		syslog 
## config files: All lines that do things (instructions) have to end with a semicolon
## Comments start with # if single line or /* blah */ for multi-line
## Changes to the config only take effect when you restart Kamailio

